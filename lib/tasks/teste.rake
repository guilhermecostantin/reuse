task :teste do 
	


def calcula_peso i, entradas,pesos, target, parada, alfa
    somatorio = 0
    entradas.each_with_index do |x, index|
        somatorio += x*pesos[index]      
    end
    saida = somatorio >= 0 ? 1 : -1
    parada[i] =
        if saida == target
             1
        else
            entradas.each_with_index do |x, index|
                pesos[index] += alfa*x*target
            end     
            0
        end
        #puts "dados da entrada #{i}"
        #puts parada[i]
        #puts pesos
    return parada, pesos

end

def verifica i, entradas, pesos, target_validacao
    
    somatorio = 0
    entradas.each_with_index do |x, index|
        somatorio += x*pesos[index]      
    end
    saida = somatorio >= 0 ? 1 : -1
    tipo =
        if saida == target_validacao
            "certa"
        else
            "errado"
        end
    puts "Padrao #{i}: Saida = #{saida}, " + tipo
end




parada = 120.times.map { 0 }
pesos = Array.new
pesos = 8.times.map { rand().round(2) }
alfa = 0.0025	
x = [
[-1,4,127,305,2,27,4,4630],
[-1,17,27,363,3,49,17,1756],
[-1,39,7,513,3,228,18,6438],
[-1,24,10,417,1,244,31,813],
[-1,61,5,196,0,228,18,6438],
[-1,42,41,2470,2,560,94,4415],
[-1,90,88,609,2,228,18,6438],
[-1,88,33,683,5,37,15,3297],
[-1,108,30,379,2,460,27,2230],
[-1,104,63,1836,5,51,9,7553],
[-1,80,2,460,1,556,62,6234],
[-1,126,26,364,2,392,193,8520],
[-1,146,6,1575,2,21,7,940],
[-1,85,13,913,0,21,7,940],
[-1,23,12,96,0,21,7,940],
[-1,8,16,431,1,811,193,22049],
[-1,163,14,351,1,24,4,2130],
[-1,123,20,175,0,1629,59,2719],
[-1,194,4,858,0,981,21,12925],
[-1,134,4,191,0,392,193,8520],
[-1,176,24,421,2,745,48,4172],
[-1,249,6,344,0,49,17,1756],
[-1,192,6,204,0,245,139,3534],
[-1,265,13,1022,0,51,9,7553],
[-1,289,125,702,5,759,15,7398],
[-1,260,11,1713,3,759,15,7398],
[-1,330,7,873,0,24,4,2130],
[-1,336,17,751,1,24,4,2130],
[-1,337,9,890,1,24,4,2130],
[-1,36,30,684,1,738,34,20812],
[-1,13,8,1610,9,2877,470,13713],
[-1,308,28,831,1,136,3,3769],
[-1,361,19,1145,1,132,7,2035],
[-1,382,17,1062,0,311,49,15307],
[-1,371,153,1458,7,468,83,9140],
[-1,72,6,147,0,468,83,9140],
[-1,403,29,1200,1,208,3,1486],
[-1,429,4,260,0,393,49,2509],
[-1,470,5,652,1,759,15,7398],
[-1,484,34,922,4,518,52,5971],
[-1,482,17,868,0,259,3,3947],
[-1,369,11,1277,0,468,83,9140],
[-1,173,95,1855,4,414,9,3653],
[-1,514,2,217,0,468,83,9140],
[-1,180,4,1323,0,854,541,11805],
[-1,535,14,288,0,854,541,11805],
[-1,564,38,649,6,29,60,1362],
[-1,580,13,549,1,51,9,7553],
[-1,592,22,537,2,1978,30,35702],
[-1,594,5,1214,2,1978,30,35702],
[-1,601,14,265,0,3348,123,63611],
[-1,263,6,1417,0,481,30,3212],
[-1,622,24,183,4,29,60,1362],
[-1,588,5,1867,0,1178,19,5486],
[-1,650,32,1563,2,6181,33,50472],
[-1,644,2,364,0,519,10,1816],
[-1,657,12,1794,0,591,24,6183],
[-1,164,14,918,3,136,8,3869],
[-1,696,4,443,0,190,15,4652],
[-1,705,15,518,1,501,23,4922],
[-1, 4795385,-59,1199,14,812,260,7942],
[-1, 84556,-29,100,11,1350,4,3903],
[-1, 228024,-28,427,10,486,33,46457],
[-1, 2416483,-28,160,19,53,1,1123],
[-1, 4821692,-27,803,2,0,0,7],
[-1, 195951,-25,588,6,31,5,959],
[-1, 1583856,-25,621,20,632,204,11315],
[-1, 280810,-23,766,10,0,0,121],
[-1, 389169,-21,312,3,31,14,1684],
[-1, 390693,-20,983,22,201,75,3873],
[-1, 22239,-19,295,2,0,0,156],
[-1, 710266,-19,419,9,751,22,11642],
[-1, 3361951,-19,980,13,810,102,29501],
[-1, 194484,-18,286,3,0,0,58],
[-1, 238603,-18,305,2,62,0,1654],
[-1, 2668153,-18,303,7,21,4,1101],
[-1, 339923,-17,357,3,304,188,6913],
[-1, 762821,-17,772,6,151,126,5445],
[-1, 503093,-17,361,1,0,0,1],
[-1, 5629,-16,534,6,891,90,7502],
[-1, 79461,-16,328,2,16,3,3718],
[-1, 137921,-16,689,5,762,17,5811],
[-1, 641442,-16,396,20,58,17,1223],
[-1, 886955,-16,89,5,872,160,37441],
[-1, 904036,-16,137,1,3,0,15],
[-1, 1675689,-16,261,4,14,1,315],
[-1, 1949066,-16,196,4,0,0,4],
[-1, 162896,-15,193,2,91,12,7673],
[-1, 25746,-14,1052,1,311,49,15307],
[-1, 446717,-14,331,5,295,8,12597],
[-1, 958997,-14,299,2,872,160,37441],
[-1, 3061,-13,315,2,37,15,3297],
[-1, 227078,-13,525,3,134,25,2894],
[-1, 227078,-13,230,3,141,32,7874],
[-1, 520068,-13,220,10,0,0,225],
[-1, 814001,-13,475,0,1537,84,15165],
[-1, 845762,-13,775,8,810,102,29501],
[-1, 5712503,-13,368,6,499,138,7425],
[-1, 8106523,-13,311,9,1868,6928,1],
[-1, 302544,-12,83,3,0,0,130],
[-1, 410201,-12,53,6,605,127,49013],
[-1, 4541130,-12,202,7,1602,67,21187],
[-1, 159025,-11,121,0,239,25,2768],
[-1, 183391,-11,206,1,25,9,576],
[-1, 210829,-11,265,2,77,4,539],
[-1, 340298,-11,497,1,33,3,483],
[-1, 423467,-11,352,2,4,1,1328],
[-1, 473620,-11,1030,10,8660,1023,156191],
[-1, 92082,-11,538,3,20,2,507],
[-1, 791642,-11,195,4,40,2,610],
[-1, 800182,-11,328,2,1230,77,40742],
[-1, 921262,-11,99,0,857,304,12705],
[-1, 1152400,-11,454,11,4188,6909,169396],
[-1, 1710396,-11,168,5,131,2,1429],
[-1, 1961238,-11,265,3,1876,209,13986],
[-1, 2176561,-11,2097,7,5,1,834],
[-1, 2905151,-11,99,1,0,0,16],
[-1, 2948323,-11,409,12,419,22,1591],
[-1, 3080019,-11,247,12,1095,163,10728],
[-1, 1444437,-11,722,4,0,0,31],
    ];
target = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
target_validacao = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
y =	[[-1,709,28,546,0,51,9,7553],
[-1,626,132,1667,4,16,0,2867],
[-1,651,9,568,3,152,10,2133],
[-1,728,3,339,0,270,76,5223],
[-1,415,42,6004,19,6181,33,50472],
[-1,752,104,620,1,51,9,7553],
[-1,761,1,779,0,566,18,4542],
[-1,769,12,1047,1,22,1,507],
[-1,773,17,657,1,59,2,3038],
[-1,561,3,1460,2,854,541,11805],
[-1,717,7,214,3,614,1,929],
[-1,810,3,1305,0,6181,33,50472],
[-1,832,2,684,0,411,4,3479],
[-1,833,4,406,0,1872,205,24454],
[-1,845,16,589,0,362,7,2273],
[-1,855,6,516,1,51,9,7553],
[-1,871,550,4667,33,6181,33,50472],
[-1,879,32,851,0,6181,33,50472],
[-1,888,36,496,1,190,15,4652],
[-1,805,5,281,1,190,15,4652],
[-1,192,13,673,0,228,18,6438],
[-1,192,3,533,0,674,89,11430],
[-1,9,5,855,0,6181,33,50472],
[-1,231,5,554,0,981,21,12925],
[-1,231,0,272,1,6181,33,50472],
[-1,176,2,230,0,49,17,1756],
[-1,234,8,775,0,51,9,7553],
[-1,237,2,83,0,1272,190,6843],
[-1,237,4,530,0,51,9,7553],
[-1,237,6,252,0,6181,33,50472],
[-1,234,3,303,0,981,21,12925],
[-1,176,0,244,0,6181,33,50472],
[-1,237,3,163,0,51,9,7553],
[-1,227,15,453,0,245,139,3534],
[-1,249,3,480,1,21,7,940],
[-1,177,2,179,0,68,4,1780],
[-1,265,1,408,0,245,52,7321],
[-1,260,1,969,1,6181,33,50472],
[-1,249,6,721,0,138,7,1327],
[-1,227,1,548,0,560,94,4415]];
epoca = 0
#puts "pesos iniciais:"
#puts pesos
#puts parada
while parada.include?(0)
    120.times do |i|
    	parada, pesos = calcula_peso i, x[i], pesos, target[i], parada, alfa
    end
    epoca+=1
    puts epoca
end
puts pesos
40.times do |i|
    verifica i, y[i], pesos, target_validacao[i]
end
puts "Foram necessarias #{epoca} epocas para treinar"

#puts "acabou"
#puts parada
	
end